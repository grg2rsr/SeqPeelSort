# EXAMPLE CONFIG FILE

# experiment_name: name of the experiment.
# data_path: location of the data relative to the path of this file
# mad_thresh: median absolute deviation for initial spike detection
# highpass_freq: high pass filter the recording, in [Hz]
# peak_mode: direction of spikes, set to negative if necessary
# fig_format: file format of diagnostic output figures
# zoom: zoom for diagnostic plots in [ms]. Leave empty for no zoom
# output: the output file format. nix or csv are supported.

[general]
experiment_name = SSR_ab3_example
data_path = example.nix
mad_thresh = 5
highpass_freq = 100
peak_mode = positive
fig_format = png
zoom = 500
output_format = nix

# The following parameters have to be specified for each unit present in the
# recording copy paste each of the following blocks and name them according to
# the unit that you want to sort, e.g. for an ab3 sensillum, copy twice and
# name the sections ab3A and ab3B

# bounds: for initial thresholding, in unit [uV]. Leave empty to only generate a histogram plot of the spike amplitudes to aid threshold selection
# adaptive_threshold: set to yes if adaptive thresholding is desired for this unit
# wsize: window size for templates,  symmetric in [ms], has to be an even number
# n_templates: the number of templates used for the PCA
# n_sim: the number of simulated templates
# n_comp: the number of PCA components that are used. 5 is usually fine
# tm_percentile: the percentile level of the template match scores that is used for detecting spikes
# tm_thresh: the threshold that is applied to the percentile level of the template match scores that is used for detecting spikes. The closer this value to one, the more conservative is the sorting: More missed spikes, but fewer are erroneously predicted.

[ab3A]
bounds = 96,150
adaptive_threshold = True
wsize = 4
n_templates = 1000
n_sim = 200
n_comp = 5
tm_percentile = 70
tm_thresh = 0.60

[ab3B]
bounds = 36,94
adaptive_threshold = False
wsize = 4
n_templates = 1000
n_sim = 200
n_comp = 5
tm_percentile = 70
tm_thresh = 0.4
